function r(r, n) {
    return n >>> r | n << 32 - r;
}

function n(r, n, t) {
    return r & n ^ ~r & t;
}

function t(r, n, t) {
    return r & n ^ r & t ^ n & t;
}

function o(n) {
    return r(2, n) ^ r(13, n) ^ r(22, n);
}

function u(n) {
    return r(6, n) ^ r(11, n) ^ r(25, n);
}

function f(n) {
    return r(7, n) ^ r(18, n) ^ n >>> 3;
}

function e(n) {
    return r(17, n) ^ r(19, n) ^ n >>> 10;
}

function a(r, n) {
    return r[15 & n] += e(r[n + 14 & 15]) + r[n + 9 & 15] + f(r[n + 1 & 15]);
}

function c(r, n) {
    var t = (65535 & r) + (65535 & n);
    return (r >> 16) + (n >> 16) + (t >> 16) << 16 | 65535 & t;
}

function i() {
    y = new Array(8), d = new Array(2), l = new Array(64), d[0] = d[1] = 0, y[0] = 1779033703, 
    y[1] = 3144134277, y[2] = 1013904242, y[3] = 2773480762, y[4] = 1359893119, y[5] = 2600822924, 
    y[6] = 528734635, y[7] = 1541459225;
}

function v() {
    var r, f, e, i, v, A, w, h, s, d, C = new Array(16);
    r = y[0], f = y[1], e = y[2], i = y[3], v = y[4], A = y[5], w = y[6], h = y[7];
    for (var b = 0; b < 16; b++) C[b] = l[3 + (b << 2)] | l[2 + (b << 2)] << 8 | l[1 + (b << 2)] << 16 | l[b << 2] << 24;
    for (var m = 0; m < 64; m++) s = h + u(v) + n(v, A, w) + g[m], s += m < 16 ? C[m] : a(C, m), 
    d = o(r) + t(r, f, e), h = w, w = A, A = v, v = c(i, s), i = e, e = f, f = r, r = c(s, d);
    y[0] += r, y[1] += f, y[2] += e, y[3] += i, y[4] += v, y[5] += A, y[6] += w, y[7] += h;
}

function A(r, n) {
    var t, o, u = 0;
    o = d[0] >> 3 & 63;
    var f = 63 & n;
    for ((d[0] += n << 3) < n << 3 && d[1]++, d[1] += n >> 29, t = 0; t + 63 < n; t += 64) {
        for (e = o; e < 64; e++) l[e] = r.charCodeAt(u++);
        v(), o = 0;
    }
    for (var e = 0; e < f; e++) l[e] = r.charCodeAt(u++);
}

function w() {
    var r = d[0] >> 3 & 63;
    if (l[r++] = 128, r <= 56) for (n = r; n < 56; n++) l[n] = 0; else {
        for (n = r; n < 64; n++) l[n] = 0;
        v();
        for (var n = 0; n < 56; n++) l[n] = 0;
    }
    l[56] = d[1] >>> 24 & 255, l[57] = d[1] >>> 16 & 255, l[58] = d[1] >>> 8 & 255, 
    l[59] = 255 & d[1], l[60] = d[0] >>> 24 & 255, l[61] = d[0] >>> 16 & 255, l[62] = d[0] >>> 8 & 255, 
    l[63] = 255 & d[0], v();
}

function h() {
    for (var r = new String(), n = 0; n < 8; n++) for (var t = 28; t >= 0; t -= 4) r += C.charAt(y[n] >>> t & 15);
    return r;
}

function s(r) {
    return i(), A(r, r.length), w(), h();
}

var y, d, l, g = new Array(1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298), C = "0123456789abcdef";

module.exports = {
    sha256: s
};